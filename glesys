#!/usr/bin/env bash
#
# Author: https://github.com/MrDaar

set -o errexit # exit when a command fails
set -o nounset # exit on undeclared variables
set -o pipefail # exit when a pipe fails
# set -o xtrace # trace what gets executed

main()
{(

    __dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    __file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
    __base="$(basename ${__file} .sh)"
    __root="$(cd "$(dirname "${__dir}")" && pwd)"

    show_error()
    {(
        error="${1:-'An unknown error occurred.'}"
        >&2 echo "${__file} >> ERROR: $error"
        exit 1
    )}

    show_help()
    {
        cat <<EOF
                   ----------------------
                     Glesys Bash Client
                   ----------------------
NOTICE: Set config in ./config

- Template path is not required, you can use the default ones.
- Options path will be required, so you can customize your requests:
- i.e. ./glesys send server/create ./custom-options/server/create-medium-8core-projectX
- Both will be inferred based on the url parameter if omitted.
- Are you sure? [Y/n]: Bypassed by adding a Y as the 5th parameter.

link:    https://github.com/GleSYS/API/wiki/API-Documentation
usage:   ./glesys <show|send|help> <url> <options> <template>
example: ./glesys send server/create ./options/server/create ./templates/server/create
EOF
    }

    show_url_help()
    {
        cat <<EOF
                   ----------------------
                     Glesys Bash Client
                   ----------------------
link:    https://github.com/GleSYS/API/wiki/API-Documentation#${url/\//}
usage:   ./glesys <show|send|help> <url> <options> <template>
example: ./glesys $action $url $options $template
EOF
    }

    action="${1}"
    url="${2}"
    options="${3}"
    template="${4}"
    are_you_sure="${5}"
    api_post_data='{}'

    # overridden by any variables set in options
    # good for SSH key, etc.
    source "${__dir}/config"

    if [[ $action != "help" && ! $url ]]; then
        show_error 'Second parameter is required.'
    fi
    if [[ $url ]]; then
        if [[ ! $options ]]; then
            echo 'Guessing options path.'
            options="${__dir}/options/$url"
        fi
        if [[ ! $template ]]; then
            echo 'Guessing template path.'
            template="${__dir}/templates/$url"
        fi

        if [ -f $options ]; then
            source "$options"
        fi
        if [ -f $template ]; then
            api_post_data="$(source "$template")"
        fi
    fi

    case $action in
        "show")
            echo
            echo 'To send this request run:'
            echo "${__file} send $url $options $template"
            echo
            echo 'REQUEST:'
            echo "curl -X POST -H \"$api_content_type\" -k --basic -u $api_auth -d \"$api_post_data\" $api_base_url$url"
            ;;
        "send")
            if [[ $are_you_sure == "Y" ]]; then
                reply=$are_you_sure
            else
                read -p 'Are you sure? [Y/n]: ' -n2 -r -t10 reply
            fi

            if [[ $reply == "Y" ]]; then
                curl -X POST \
                    -H "$api_content_type" \
                    -k --basic \
                    -u $api_auth \
                    -d "$api_post_data" \
                    $api_base_url$url
                echo
            else
                echo 'Request aborted.'
            fi
            ;;
        "help")
            if [[ ! $url ]]; then
                show_help
            else
                show_url_help $action $url
            fi
            ;;
        *)
            show_error 'Invalid action.'
    esac
)}

main "${1:-help}" "${2:-}" "${3:-}" "${4:-}" "${5:-no}"
